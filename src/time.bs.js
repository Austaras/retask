// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Cmd$Retask from "./cmd.bs.js";
import * as Sub$Retask from "./sub.bs.js";

function delay(tagger, delay$1) {
  return function () {
    return Cmd$Retask.register(function (send) {
                var id = setTimeout((function (param) {
                        return send(Curry._1(tagger, undefined));
                      }), delay$1);
                return function (param) {
                  clearTimeout(id);
                  
                };
              });
  };
}

function delayFloat(tagger, delay) {
  return function () {
    return Cmd$Retask.register(function (send) {
                var id = setTimeout((function (param) {
                        return send(Curry._1(tagger, undefined));
                      }), delay);
                return function (param) {
                  clearTimeout(id);
                  
                };
              });
  };
}

function nextFrame(tagger) {
  return function () {
    return Cmd$Retask.register(function (send) {
                var id = requestAnimationFrame(function (time) {
                      return send(Curry._1(tagger, time));
                    });
                return function (param) {
                  cancelAnimationFrame(id);
                  
                };
              });
  };
}

var token = Sub$Retask.getToken("time.re");

function every(tagger, interval) {
  return function () {
    var task = function (send) {
      var id = setInterval((function (param) {
              return send(undefined);
            }), interval);
      return function (param) {
        clearInterval(id);
        
      };
    };
    return Sub$Retask.register({
                kind: token,
                param: interval,
                task: task,
                tagger: tagger
              });
  };
}

function everyFloat(tagger, interval) {
  return function () {
    var task = function (send) {
      var id = setInterval((function (param) {
              return send(undefined);
            }), interval);
      return function (param) {
        clearInterval(id);
        
      };
    };
    return Sub$Retask.register({
                kind: token,
                param: interval,
                task: task,
                tagger: tagger
              });
  };
}

var unit;

export {
  delay ,
  delayFloat ,
  nextFrame ,
  token ,
  unit ,
  every ,
  everyFloat ,
  
}
/* token Not a pure module */
